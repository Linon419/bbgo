name: Docker Image (UI + GHCR Multi-Arch)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'git ref to build (branch/tag/sha)'
        required: false
        default: 'main'
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout (build exactly this commit)
        uses: actions/checkout@v4
        with:
          # 锁定当前提交，避免误用旧分支的 Dockerfile
          ref: ${{ github.sha }}
          submodules: recursive
          fetch-depth: 0

      # 统一小写，避免 GHCR 引用大小写问题
      - name: Normalize repo to lowercase
        run: |
          echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      # 构建前强校验：如果还含有 --frozen-lockfile，直接失败，避免浪费时间
      - name: Sanity check Dockerfile (no raw strict install)
        run: |
          echo '--- yarn install lines ---'
          nl -ba Dockerfile | sed -n '/yarn .*install/p'
          # 只拦截“裸跑严格模式”的写法：RUN yarn install --frozen-lockfile
          if grep -Eq '^\s*RUN\s+yarn\s+install\s+--frozen-lockfile(\s|$)' Dockerfile; then
            echo "::error::Found raw 'RUN yarn install --frozen-lockfile'. Please use the workspace-friendly fallback command."
            exit 1
          fi
          # 可选：提示是否包含我们的容错回退
          if ! grep -q 'yarn install --immutable || yarn install' Dockerfile; then
            echo "::warning::Fallback install pattern not found (ok if you intentionally changed it)."
          fi


      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPO_LC }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # 首次改动建议强制不走缓存；确认稳定后可删掉这一行
          no-cache: true
          # 用 GHCR 做 registry cache（新 key：buildcache-v3）
          cache-from: type=registry,ref=ghcr.io/${{ env.REPO_LC }}/buildcache-v3
          cache-to:   type=registry,ref=ghcr.io/${{ env.REPO_LC }}/buildcache-v3,mode=max
          build-args: |
            GO_VERSION=1.23
            NODE_VERSION=20
