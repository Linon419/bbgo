# .github/workflows/docker-image.yml
name: Docker Image (UI + GHCR Multi-Arch)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'git ref to build (branch/tag/sha)'
        required: false
        default: 'main'
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # 允许推送到 GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
          submodules: recursive
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch           # e.g. :main
            type=ref,event=pr               # e.g. :pr-123
            type=semver,pattern={{version}} # e.g. :v1.2.3
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha                        # e.g. :sha-xxxx
            # 给默认分支额外打一枚 latest
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/buildcache
          cache-to:   type=registry,ref=ghcr.io/${{ github.repository }}/buildcache,mode=max
          build-args: |
            GO_VERSION=1.23
            NODE_VERSION=20
