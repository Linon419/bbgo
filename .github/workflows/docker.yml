name: Docker Image (UI + GHCR Multi-Arch)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'git ref to build (branch/tag/sha)'
        required: false
        default: 'main'
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout (build exactly this commit)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
          submodules: recursive
          fetch-depth: 0

      - name: Print repo snapshot
        run: |
          pwd && ls -la
          echo "---- Top of Dockerfile ----"
          sed -n '1,80p' Dockerfile || true

      - name: Normalize repo to lowercase
        run: echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      # ✅ 只告警不拦截，避免 30 秒就失败
      - name: Sanity checks (warn-only)
        continue-on-error: true
        run: |
          echo '--- yarn install lines ---'
          nl -ba Dockerfile | sed -n '/yarn .*install/p' || true
          if grep -Eqi '^\s*COPY\s+.*2>/dev/null' Dockerfile; then
            echo "::warning::Found 'COPY ... 2>/dev/null' which is invalid in Dockerfile. Remove redirections from COPY."
          fi
          if grep -Eq '^\s*RUN\s+yarn\s+install\s+--frozen-lockfile(\s|$)' Dockerfile; then
            echo "::warning::Found raw 'RUN yarn install --frozen-lockfile'. Use the fallback command."
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPO_LC }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          labels: |
            org.opencontainers.image.title=bbgo
            org.opencontainers.image.description=The modern cryptocurrency trading bot framework written in Go.
            org.opencontainers.image.url=https://github.com/${{ env.REPO_LC }}
            org.opencontainers.image.source=https://github.com/${{ env.REPO_LC }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true
          cache-from: type=registry,ref=ghcr.io/${{ env.REPO_LC }}/buildcache-v7
          cache-to:   type=registry,ref=ghcr.io/${{ env.REPO_LC }}/buildcache-v7,mode=max
          build-args: |
            GO_VERSION=1.23
            NODE_VERSION=20
